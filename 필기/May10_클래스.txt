인스턴스:

Circle a = new Circle();
Circle b = new Circle(3.0);
Circle c = a; //배열의 Shallow Copy와 비슷한 효과

객체 생성 횟수 세는 법: public 'static' int count = 0; 을 통해 셈
static이 붙는다는것은 개별적 요소가 아니라 클래스 전체가 공유하는 것을 의미한다.
static <-> 인스턴스

메모리 구역은 static stack heap 으로 나눠짐

static 접근제어자가 붙으면 heap 영역이 아니라 Static 영역에 존재한다

Static 영역은
Circle a; //static 영역에 바로 static 변수와 메소드가 잡힘
a = new Circle();

ex)
System.out.println(Circle.count); 만 실행시켜도 Circle class가 존재하고, 그 안에 static var count가 존재하면 키워드가 나오자 마자 static 메모리가 잡힘.

어떤 클래스의 생성자가 모두 private 이면,
인스턴스를 생성하는건 안됨
But, 내부의 모든 요소가 static으로 되어 있으면, [클래스이름].[static 변수 이름] 으로 모두 접근 가능

인스턴스 변수 vs 클래스 변수 vs 지역변수